{
  "version": 3,
  "sources": ["../src/service-worker/devWorker.ts"],
  "sourcesContent": ["declare let self: ServiceWorkerGlobalScope;\n\nasync function clearCache() {\n  const keys = await caches.keys();\n  for (const k of keys) {\n    await caches.delete(k);\n  }\n}\n\n// The install handler takes care of precaching the resources we always need.\nself.addEventListener(\"install\", async (event) => {\n  event.waitUntil(clearCache().then(self.skipWaiting));\n});\n\nself.addEventListener(\"fetch\", async (event) => {\n  // Skip cross-origin requests, like those for Google Analytics.\n  if (\n    event.request.url.startsWith(self.location.origin) &&\n    event.request.url !== \"/esbuild\" &&\n    event.request.destination === \"document\"\n  ) {\n    event.respondWith(\n      fetch(event.request).then((response) => {\n        if (response.status === 404) {\n          return fetch(\"/index.html\");\n        } else {\n          return response;\n        }\n      }) as Response | PromiseLike<Response>\n    );\n  }\n});\nself.addEventListener(\"activate\", () => {\n  self.clients.claim();\n});\nexport {};\n"],
  "mappings": ";;;AAEA,eAAe,aAAa;AAC1B,QAAM,OAAO,MAAM,OAAO,KAAK;AAC/B,aAAW,KAAK,MAAM;AACpB,UAAM,OAAO,OAAO,CAAC;AAAA,EACvB;AACF;AAGA,KAAK,iBAAiB,WAAW,OAAO,UAAU;AAChD,QAAM,UAAU,WAAW,EAAE,KAAK,KAAK,WAAW,CAAC;AACrD,CAAC;AAED,KAAK,iBAAiB,SAAS,OAAO,UAAU;AAE9C,MACE,MAAM,QAAQ,IAAI,WAAW,KAAK,SAAS,MAAM,KACjD,MAAM,QAAQ,QAAQ,cACtB,MAAM,QAAQ,gBAAgB,YAC9B;AACA,UAAM;AAAA,MACJ,MAAM,MAAM,OAAO,EAAE,KAAK,CAAC,aAAa;AACtC,YAAI,SAAS,WAAW,KAAK;AAC3B,iBAAO,MAAM,aAAa;AAAA,QAC5B,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACF,CAAC;AACD,KAAK,iBAAiB,YAAY,MAAM;AACtC,OAAK,QAAQ,MAAM;AACrB,CAAC;",
  "names": []
}
